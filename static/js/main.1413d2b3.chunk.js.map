{"version":3,"sources":["components/Header/index.js","components/Jumbotron/index.js","components/Wrapper/index.js","components/Character/index.js","App.js","index.js"],"names":["Header","props","className","message","score","highScore","Jumbotron","Wrapper","children","Character","src","image","alt","name","id","key","onClick","imagesClicked","App","state","characters","clickedCharacter","prevState","slice","includes","push","length","setState","i","j","Math","floor","random","this","map","character","Component","ReactDOM","render","document","getElementById"],"mappings":"2zDAuBeA,MAlBf,SAAgBC,GACd,OACE,yBAAKC,UAAU,OACb,yBAAKA,UAAU,OACb,4CAEF,yBAAKA,UAAU,iBACb,4BAAKD,EAAME,UAEb,yBAAKD,UAAU,kBACb,wBAAIA,UAAU,SAAd,UAA8BD,EAAMG,OACpC,6BACA,wBAAIF,UAAU,cAAd,eAAwCD,EAAMI,c,MCEvCC,MAdf,WACE,OACE,yBAAKJ,UAAU,yBACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,aAAd,qCACA,2G,MCDOK,MANf,SAAiBN,GACf,OACE,yBAAKC,UAAU,qCAAqCD,EAAMO,W,MCa/CC,MAff,SAAmBR,GACjB,OACE,yBAAKC,UAAU,QACb,yBACEA,UAAU,eACVQ,IAAKT,EAAMU,MACXC,IAAKX,EAAMY,KACXC,GAAIb,EAAMa,GACVC,IAAKd,EAAMa,GACXE,QAAS,kBAAMf,EAAMgB,cAAchB,EAAMa,S,OCgFlCI,E,2MAlFbC,MAAQ,CACNC,aACAC,iBAAkB,GAClBjB,MAAO,EACPC,UAAW,EACXF,QAAS,I,EAIXc,cAAgB,SAAAH,GACd,IAAIQ,EAAY,EAAKH,MAAME,iBAAiBE,QACxCnB,EAAQ,EAAKe,MAAMf,MACnBC,EAAY,EAAKc,MAAMd,UAE3B,GAAK,EAAKc,MAAME,iBAAiBG,SAASV,KACpCV,IAAUC,GACZD,IACAC,KAEAD,IAEFkB,EAAUG,KAAKX,GAEU,KAArBQ,EAAUI,QAWhB,GAAI,EAAKP,MAAME,iBAAiBG,SAASV,GACvC,EAAKa,SAAS,CACZvB,MAAO,EACPC,UAAWA,EACXgB,iBAAkB,GAClBlB,QACE,uEANN,CAWA,EAAKwB,SAAS,CACZvB,MAAOA,EACPC,UAAWA,EACXgB,iBAAkBC,EAClBnB,QAAS,KAGX,IAAK,IAAIyB,EAAIR,EAAWM,OAAS,EAAGE,EAAI,EAAGA,IAAK,CAC9C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADM,EAEb,CAACR,EAAWS,GAAIT,EAAWQ,IAA3DR,EAAWQ,GAFkC,KAE9BR,EAAWS,GAFmB,WA5B5C,EAAKF,SAAS,CACZvB,MAAO,EACPC,UAAWD,EACXD,QAAS,iDACTkB,iBAAkB,M,wEA8BhB,IAAD,OACP,OACE,oCACE,kBAAC,EAAD,CACEjB,MAAO6B,KAAKd,MAAMf,MAClBC,UAAW4B,KAAKd,MAAMd,UACtBF,QAAS8B,KAAKd,MAAMhB,UAEtB,kBAAC,EAAD,MACA,kBAAC,EAAD,KACG8B,KAAKd,MAAMC,WAAWc,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACExB,MAAOwB,EAAUxB,MACjBC,IAAKuB,EAAUtB,KACfC,GAAIqB,EAAUrB,GACdC,IAAKoB,EAAUrB,GACfG,cAAe,EAAKA,yB,GA5EhBmB,aCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1413d2b3.chunk.js","sourcesContent":["//Setting up header elements including the heading, message and score information\n\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Clicky Game</h1>\n      </div>\n      <div className=\"col-6 message\">\n        <h3>{props.message}</h3>\n      </div>\n      <div className=\"col score-info\">\n        <h3 className=\"score\">Score: {props.score}</h3>\n        <hr></hr>\n        <h3 className=\"high-score\">High Score: {props.highScore}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","// Jumbotron that contains the instructions\n\nimport React from \"react\";\nimport \"./style.css\";\n\nfunction Jumbotron() {\n  return (\n    <div className=\"jumbotron text-center\">\n      <div className=\"text\">\n        <h1 className=\"display-4\">Clicky Game: Rocket Power Edition</h1>\n        <h4>\n          Click on an image to earn points, but don't click on any more than\n          once!\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return (\n    <div className=\"wrapper d-flex flex-row flex-wrap\">{props.children}</div>\n  );\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Character(props) {\n  return (\n    <div className=\"card\">\n      <img\n        className=\"card-img-top\"\n        src={props.image}\n        alt={props.name}\n        id={props.id}\n        key={props.id}\n        onClick={() => props.imagesClicked(props.id)}\n      />\n    </div>\n  );\n}\n\nexport default Character;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Wrapper from \"./components/Wrapper\";\nimport Character from \"./components/Character\";\nimport characters from \"./characters.json\";\n\n// Using Class Component\nclass App extends Component {\n  //Defining state properties\n  state = {\n    characters,\n    clickedCharacter: [],\n    score: 0,\n    highScore: 0,\n    message: \"\"\n  };\n\n  //Function to handle the images clicked, grabs the id to compare if the id is already in the array we created\n  imagesClicked = id => {\n    let prevState = this.state.clickedCharacter.slice();\n    let score = this.state.score;\n    let highScore = this.state.highScore;\n\n    if (!this.state.clickedCharacter.includes(id)) {\n      if (score === highScore) {\n        score++;\n        highScore++;\n      } else {\n        score++;\n      }\n      prevState.push(id);\n\n      if (prevState.length === 12) {\n        this.setState({\n          score: 0,\n          highScore: score,\n          message: \"Congratulations, you won! Click to play again!\",\n          clickedCharacter: []\n        });\n        return;\n      }\n    }\n\n    if (this.state.clickedCharacter.includes(id)) {\n      this.setState({\n        score: 0,\n        highScore: highScore,\n        clickedCharacter: [],\n        message:\n          \"Game Over! That card was already clicked. Click to play again!\"\n      });\n      return;\n    }\n\n    this.setState({\n      score: score,\n      highScore: highScore,\n      clickedCharacter: prevState,\n      message: \"\"\n    });\n\n    for (let i = characters.length - 1; i > 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1));\n      [characters[i], characters[j]] = [characters[j], characters[i]];\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <Header\n          score={this.state.score}\n          highScore={this.state.highScore}\n          message={this.state.message}\n        />\n        <Jumbotron />\n        <Wrapper>\n          {this.state.characters.map(character => (\n            <Character\n              image={character.image}\n              alt={character.name}\n              id={character.id}\n              key={character.id}\n              imagesClicked={this.imagesClicked}\n            />\n          ))}\n        </Wrapper>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}